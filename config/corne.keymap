#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/*           42 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────────┬────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯
              ╰────────────┴────────────╯            */

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41
#define THUMBS 36 37 38 39 40 41
#define SUPER LS(LA(LC(LCMD)))

/ {
    behaviors {
        hl: hl {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mod Left";
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mod Right";
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    macros {
        tr: tr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&trans>;
            label = "Transparent Binding Behaviour";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp PLUS       &kp Q        &kp W       &kp E       &kp R        &kp T        &kp Y    &kp U        &kp I       &kp O       &kp P           &kp EQUAL
&mt SUPER ESC  &hl LCTRL A  &hl LALT S  &hl LCMD D  &hl LSHFT F  &kp G        &kp H    &hr RSHFT J  &hr RCMD K  &hr RALT L  &hr RCTRL SEMI  &kp SQT
&kp MINUS      &kp Z        &kp X       &kp C       &kp V        &kp B        &kp N    &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp UNDER
                                        &kp TAB     &mo 1        &kp SPACE    &kp RET  &kp BSPC     &mo 2
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
&ext_power EP_TOG  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0   &tr
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &tr
&kp F12            &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &kp F11
                                               &tr           &tr           &tr             &tr       &tr       &tr
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
&tr  &kp EXCL  &kp AT  &kp POUND  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR   &kp GRAVE
&tr  &tr       &tr     &tr        &kp LBKT  &kp LBRC     &kp RBRC   &kp RBKT  &kp BSLH   &kp PIPE  &kp TILDE  &tr
&tr  &tr       &tr     &tr        &tr       &tr          &tr        &tr       &tr        &tr       &tr        &to 3
                       &tr        &tr       &tr          &tr        &tr       &tr
            >;
        };

        Game {
            label = "Game";
            bindings = <
&kp ESC    &tr    &tr    &tr       &tr        &tr         &tr    &tr    &tr    &tr    &tr       &tr
&kp TAB    &kp A  &kp S  &kp D     &kp F      &kp G       &kp H  &kp J  &kp K  &kp L  &kp SEMI  &tr
&kp LSHFT  &tr    &tr    &tr       &tr        &tr         &tr    &tr    &tr    &tr    &tr       &to 0
                         &kp LALT  &kp SPACE  &kp LCMD    &tr    &tr    &tr
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };
