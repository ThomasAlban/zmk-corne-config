#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/*           42 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────────┬────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯
              ╰────────────┴────────────╯            */


#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41
#define THUMBS 36 37 38 39 40 41



&led_strip { chain-length = <27>; }; // make sure that all the LEDs turn on 

/ {
    behaviors {
        // add homerow mod behaviours
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            flavor = "balanced";
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp PLUS                  &kp Q         &kp W        &kp E        &kp R         &kp T        &kp Y    &kp U         &kp I        &kp O             &kp P            &kp EQUAL
&mt LS(LA(LC(LCMD))) ESC  &hml LCTRL A  &hml LALT S  &hml LCMD D  &hml LSHFT F  &kp G        &kp H    &hmr RSHFT J  &hmr RCMD K  &hmr RIGHT_ALT L  &hmr RCTRL SEMI  &kp SQT
&kp MINUS                 &kp Z         &kp X        &kp C        &kp V         &kp B        &kp N    &kp M         &kp COMMA    &kp DOT           &kp FSLH         &kp UNDER
                                                     &kp BSPC     &mo 1         &kp SPACE    &kp RET  &mo 2         &kp TAB
            >;
        };

        lower {
            bindings = <
&trans  &kp N1    &kp N2  &kp N3         &kp N4            &kp N5            &kp N6           &kp N7             &kp N8         &kp N9                &kp N0                 &trans
&trans  &kp EXCL  &kp AT  &kp POUND      &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND      &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&trans  &trans    &trans  &kp LS(POUND)  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp PIPE              &kp TILDE              &trans
                          &trans         &trans            &trans            &trans           &trans             &trans
            >;
        };

        raise {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2                       &bt BT_SEL 3     &bt BT_SEL 4       &trans    &trans    &trans  &trans     &trans  &trans
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2                       &bt BT_SEL 3     &bt BT_SEL 4       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans      &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(184,100,50)  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG    &trans    &trans    &trans  &trans     &trans  &to 3
                                              &trans                             &trans           &trans             &trans    &trans    &trans
            >;
        };

        gaming {
            bindings = <
&kp ESCAPE      &trans  &trans  &trans        &trans     &trans              &trans  &trans  &trans  &trans  &trans         &trans
&kp TAB         &kp A   &kp S   &kp D         &kp F      &kp G               &kp H   &kp J   &kp K   &kp L   &kp SEMICOLON  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans        &trans     &trans              &trans  &trans  &trans  &trans  &trans         &to 0
                                &kp LEFT_ALT  &kp SPACE  &kp LEFT_COMMAND    &trans  &mo 1   &mo 2
            >;
        };
    };
};
