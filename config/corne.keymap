#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/*           42 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────────┬────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯
              ╰────────────┴────────────╯            */

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41
#define THUMBS 36 37 38 39 40 41

#define SUPER LS(LA(LC(LCMD)))
#define &tr &trans

&led_strip { chain-length = <27>; }; // make sure that all the LEDs turn on 

/ {
    behaviors {
        hl: hl { // homerow mod left
            compatible = "zmk,behavior-hold-tap";
            label = "HL";
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hr: hr { // homerow mod right
            compatible = "zmk,behavior-hold-tap";
            label = "HR";
            flavor = "balanced";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp PLUS       &kp Q        &kp W       &kp E       &kp R        &kp T      /**/  &kp Y    &kp U        &kp I       &kp O       &kp P           &kp EQUAL
&mt SUPER ESC  &hl LCTRL A  &hl LALT S  &hl LCMD D  &hl LSHFT F  &kp G      /**/  &kp H    &hr RSHFT J  &hr RCMD K  &hr RALT L  &hr RCTRL SEMI  &kp SQT
&kp MINUS      &kp Z        &kp X       &kp C       &kp V        &kp B      /**/  &kp N    &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp UNDER
                                        &kp TAB     &mo 1        &kp SPACE  /**/  &kp RET  &kp BSPC     &mo 2
            >;
        };



        lower {
            bindings = <
&tr         &kp N1        &kp N2        &kp N3        &kp N4        &kp N5        /**/  &kp N6     &kp N7    &kp N8  &kp N9     &kp N0  &tr   
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  /**/  &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &trans  &tr   
&trans      &tr           &tr           &tr           &tr           &tr           /**/  &tr        &tr       &tr     &tr        &tr     &tr   
                                        &tr           &tr           &tr           /**/  &tr        &tr       &tr   
            >;
        };

        raise {
            bindings = <
&tr     &kp EXCL  &kp AT  &kp POUND  &kp DLLR  &kp PRCNT  /**/  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR   &kp GRAVE
&tr     &tr       &tr     &tr        &kp LBKT  &kp LBRC   /**/  &kp RBRC   &kp RBKT  &kp BSLH   &kp PIPE  &kp TILDE  &tr
&tr     &tr       &tr     &tr        &tr       &tr        /**/  &tr        &tr       &tr        &tr       &tr        &to 3
                          &tr        &tr       &tr        /**/  &tr        &tr       &tr   
            >;
        };

        gaming {
            bindings = <
&kp ESC    &tr     &tr     &tr       &tr        &tr       /**/  &tr     &tr     &tr     &tr     &tr       &tr
&kp TAB    &kp A   &kp S   &kp D     &kp F      &kp G     /**/  &kp H   &kp J   &kp K   &kp L   &kp SEMI  &tr
&kp LSHFT  &tr     &tr     &tr       &tr        &tr       /**/  &tr     &tr     &tr     &tr     &tr       &to 0
                           &kp LALT  &kp SPACE  &kp LCMD  /**/  &tr     &tr     &tr   
            >;
        };

//         lower {
//             bindings = <
// &trans       &kp N1    &kp N2  &kp N3     &kp N4    &kp N5     /**/  &kp N6     &kp N7    &kp N8     &kp N9    &kp N0     &trans
// &bootloader  &kp EXCL  &kp AT  &kp POUND  &kp DLLR  &kp PRCNT  /**/  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR   &kp GRAVE
// &trans       &trans    &trans  &trans     &kp LBKT  &kp LBRC   /**/  &kp RBRC   &kp RBKT  &kp BSLH   &kp PIPE  &kp TILDE  &trans
//                                &trans     &trans    &trans     /**/  &trans     &trans    &trans
//             >;
//         };

//         raise {
//             bindings = <
// &bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2                      &bt BT_SEL 3     &bt BT_SEL 4         &trans             &trans    &trans  &trans     &trans  &trans
// &trans      &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(176,94,47)  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG      &kp LEFT           &kp DOWN  &kp UP  &kp RIGHT  &trans  &bootloader
// &trans      &trans           &trans           &trans                            &trans           &ext_power EP_TOG    &ext_power EP_TOG  &trans    &trans  &trans     &trans  &to 3
//                                               &trans                            &trans           &trans               &trans             &trans    &trans
//             >;
//         };
    };
};
